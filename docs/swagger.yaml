definitions:
  models.Attribute:
    properties:
      category:
        $ref: '#/definitions/models.AttributeCategory'
      category_id:
        type: integer
      code:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      order:
        type: integer
      updated_at:
        type: string
    type: object
  models.AttributeCategory:
    properties:
      attributes:
        items:
          $ref: '#/definitions/models.Attribute'
        type: array
      code:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.DenyRule:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: integer
      is_global:
        type: boolean
      name:
        type: string
      product_part_id:
        type: integer
      productPart:
        $ref: '#/definitions/models.ProductPart'
      updated_at:
        type: string
    type: object
  models.FixedPrice:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      product_part_id:
        type: integer
      productPart:
        $ref: '#/definitions/models.ProductPart'
      updated_at:
        type: string
    type: object
  models.Product:
    properties:
      cloud_lab_id:
        type: integer
      code:
        type: string
      created_at:
        type: string
      default_quantity:
        type: integer
      description:
        type: string
      enable_custom_format:
        type: boolean
      enable_custom_quantity:
        type: boolean
      id:
        type: integer
      maximum_quantity:
        type: integer
      minimum_quantity:
        type: integer
      name:
        type: string
      packing_unit:
        type: integer
      price_calculation_type:
        type: string
      time_to_produce:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  models.ProductPart:
    properties:
      code:
        type: string
      content_type:
        type: string
      created_at:
        type: string
      deny_rule:
        items:
          $ref: '#/definitions/models.DenyRule'
        type: array
      fixed_price:
        items:
          $ref: '#/definitions/models.FixedPrice'
        type: array
      id:
        type: integer
      name:
        type: string
      selection_rule:
        items:
          $ref: '#/definitions/models.SelectionRule'
        type: array
      updated_at:
        type: string
    type: object
  models.ProductionTime:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      time:
        type: string
      updated_at:
        type: string
    type: object
  models.SelectionRule:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: integer
      is_global:
        type: boolean
      name:
        type: string
      product_part_id:
        type: integer
      productPart:
        $ref: '#/definitions/models.ProductPart'
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /attribute-categories/:
    get:
      description: |-
        Retrieve a list of all AttributeCategory.
        - Use 'search' parameter for full-text search across all searchable fields.
        - Use 'code', 'id', or 'name' parameters for individual field searches (partial matches).
        - Combine 'code', 'id', and 'name' parameters for cross-field AND search.
        Example: /items?search=keyword&code=abc&name=test
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search term for full-text search across searchable fields
        in: query
        name: search
        type: string
      - description: Filter by code field (partial match)
        in: query
        name: code
        type: string
      - description: Filter by name field (partial match)
        in: query
        name: name
        type: string
      - description: Filter by ID field (partial match)
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AttributeCategory'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all AttributeCategory
      tags:
      - AttributeCategory
    post:
      consumes:
      - application/json
      description: Create an AttributeCategory with the provided JSON payload
      parameters:
      - description: Attribute Category data
        in: body
        name: AttributeCategory
        required: true
        schema:
          $ref: '#/definitions/models.AttributeCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AttributeCategory'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new AttributeCategory
      tags:
      - AttributeCategory
  /attribute-categories/{id}:
    delete:
      description: Delete a single AttributeCategory by its ID
      parameters:
      - description: Attribute Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Attribute Category deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete an AttributeCategory by ID
      tags:
      - AttributeCategory
    get:
      description: Get a single AttributeCategory by its ID
      parameters:
      - description: AttributeCategory ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AttributeCategory'
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get AttributeCategory by ID
      tags:
      - AttributeCategory
    put:
      consumes:
      - application/json
      description: Update the details of an existing AttributeCategory by providing
        the updated JSON payload
      parameters:
      - description: AttributeCategory ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated AttributeCategory data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.AttributeCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AttributeCategory'
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing AttributeCategory
      tags:
      - AttributeCategory
  /attributes/:
    get:
      description: |-
        Retrieve a list of all attributes.
        - Use 'search' parameter for full-text search across all searchable fields.
        - Use 'code', 'id', or 'name' parameters for individual field searches (partial matches).
        - Combine 'code', 'id', and 'name' parameters for cross-field AND search.
        Example: /items?search=keyword&code=abc&name=test
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search term for full-text search across searchable fields
        in: query
        name: search
        type: string
      - description: Filter by code field (partial match)
        in: query
        name: code
        type: string
      - description: Filter by name field (partial match)
        in: query
        name: name
        type: string
      - description: Filter by ID field (partial match)
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Attribute'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all attributes
      tags:
      - Attributes
    post:
      consumes:
      - application/json
      description: Create an attribute with the provided JSON payload
      parameters:
      - description: Attribute data
        in: body
        name: Attribute
        required: true
        schema:
          $ref: '#/definitions/models.Attribute'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Attribute'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new attribute
      tags:
      - Attributes
  /attributes/{id}:
    delete:
      description: Delete a single attribute by its ID
      parameters:
      - description: Attribute ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Attribute deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete an attribute by ID
      tags:
      - Attributes
    get:
      description: Get a single attribute by its ID
      parameters:
      - description: Attribute ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Attribute'
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Attribute by ID
      tags:
      - Attributes
    put:
      consumes:
      - application/json
      description: Update the details of an existing attribute by providing the updated
        JSON payload
      parameters:
      - description: Attribute ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Attribute data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Attribute'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Attribute'
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing attribute
      tags:
      - Attributes
  /deny-rules/:
    get:
      description: |-
        Retrieve a list of all deny rules.
        - Use the 'search' parameter for a full-text search across all searchable fields.
        - Use the 'code', 'id', or 'name' parameters for individual field searches (partial matches).
        - Combine 'code', 'id', and 'name' parameters for cross-field AND search.
        Example: /deny-rules?search=keyword&code=abc&name=test
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Full-text search across all searchable fields
        in: query
        name: search
        type: string
      - description: Filter by code field (partial match)
        in: query
        name: code
        type: string
      - description: Filter by ID field (partial match)
        in: query
        name: id
        type: string
      - description: Filter by name field (partial match)
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DenyRule'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all deny rules
      tags:
      - DenyRule
    post:
      consumes:
      - application/json
      description: Create a deny rule with the provided JSON payload
      parameters:
      - description: Deny Rule data
        in: body
        name: denyRule
        required: true
        schema:
          $ref: '#/definitions/models.DenyRule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DenyRule'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new deny rule
      tags:
      - DenyRule
  /deny-rules/{id}:
    delete:
      description: Delete a single deny rule by its ID
      parameters:
      - description: Deny Rule ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deny Rule deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a deny rule by ID
      tags:
      - DenyRule
    get:
      description: Get a single Deny Rule by its ID
      parameters:
      - description: Deny Rule ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DenyRule'
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Deny Rule not found
          schema:
            additionalProperties: true
            type: object
      summary: Get Deny Rule by ID
      tags:
      - DenyRule
    put:
      consumes:
      - application/json
      description: Update the details of an existing deny rule by providing the updated
        JSON payload
      parameters:
      - description: Deny Rule ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated deny rule data
        in: body
        name: denyRule
        required: true
        schema:
          $ref: '#/definitions/models.DenyRule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DenyRule'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing deny rule
      tags:
      - DenyRule
  /fixed-prices/:
    get:
      description: |-
        Retrieve a list of all FixedPrices.
        - Use the 'search' parameter for a full-text search across all searchable fields.
        - Use the 'code', 'id', or 'name' parameters for individual field searches (partial matches).
        - Combine 'code', 'id', and 'name' parameters for cross-field AND search.
        Example: /fixed-prices?search=keyword&code=abc&name=test
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Full-text search across all searchable fields
        in: query
        name: search
        type: string
      - description: Filter by code field (partial match)
        in: query
        name: code
        type: string
      - description: Filter by ID field (partial match)
        in: query
        name: id
        type: string
      - description: Filter by name field (partial match)
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FixedPrice'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all FixedPrices
      tags:
      - FixedPrices
    post:
      consumes:
      - application/json
      description: Create a Fixed Price with the provided JSON payload
      parameters:
      - description: Fixed Price data
        in: body
        name: FixedPrice
        required: true
        schema:
          $ref: '#/definitions/models.FixedPrice'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FixedPrice'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new Fixed Price
      tags:
      - FixedPrices
  /fixed-prices/{id}:
    delete:
      description: Delete a single FixedPrice by its ID
      parameters:
      - description: Fixed Price ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Fixed Price deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete an FixedPrice by ID
      tags:
      - FixedPrices
    get:
      description: Get a single FixedPrice by its ID
      parameters:
      - description: FixedPrice ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FixedPrice'
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get FixedPrice by ID
      tags:
      - FixedPrices
    put:
      consumes:
      - application/json
      description: Update the details of an existing FixedPrice by providing the updated
        JSON payload
      parameters:
      - description: FixedPrice ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated FixedPrice data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.FixedPrice'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FixedPrice'
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing FixedPrice
      tags:
      - FixedPrices
  /product-parts/:
    get:
      description: |-
        Retrieve a list of all product parts.
        - Use the 'search' parameter for a full-text search across all searchable fields.
        - Use the 'code', 'id', 'name', or 'content_type' parameters for individual field searches (partial matches).
        - Combine 'code', 'id', 'name', and 'content_type' parameters for cross-field AND search.
        Example: /product-parts?search=keyword&code=abc&name=test
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Full-text search across all searchable fields
        in: query
        name: search
        type: string
      - description: Filter by code field (partial match)
        in: query
        name: code
        type: string
      - description: Filter by ID field (partial match)
        in: query
        name: id
        type: string
      - description: Filter by name field (partial match)
        in: query
        name: name
        type: string
      - description: Filter by content_type field (partial match)
        in: query
        name: content_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductPart'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all product parts
      tags:
      - ProductPart
    post:
      consumes:
      - application/json
      parameters:
      - description: Product Part data
        in: body
        name: productPart
        required: true
        schema:
          $ref: '#/definitions/models.ProductPart'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductPart'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new product part
      tags:
      - ProductPart
  /product-parts/{id}:
    delete:
      description: Delete a single product part by its ID
      parameters:
      - description: Product Part ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Product Part deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a product part by ID
      tags:
      - ProductPart
    get:
      description: Get a single Product Part by its ID
      parameters:
      - description: Product Part ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductPart'
        "400":
          description: Invalid ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Product Part not found
          schema:
            additionalProperties: true
            type: object
      summary: Get Product Part by ID
      tags:
      - ProductPart
    put:
      consumes:
      - application/json
      description: Update the details of an existing product part by providing the
        updated JSON payload
      parameters:
      - description: Product Part ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.ProductPart'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductPart'
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing product part
      tags:
      - ProductPart
  /production-times/:
    get:
      description: |-
        Retrieve a list of all productionTime.
        - Use the 'search' parameter for a full-text search across all searchable fields.
        - Use the 'code', 'id', 'name', or 'time' parameters for individual field searches (partial matches).
        - Combine 'code', 'id', 'name', and 'time' parameters for cross-field AND search.
        Example: /productionTime?search=keyword&code=abc&name=test
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Full-text search across all searchable fields
        in: query
        name: search
        type: string
      - description: Filter by code field (partial match)
        in: query
        name: code
        type: string
      - description: Filter by ID field (partial match)
        in: query
        name: id
        type: string
      - description: Filter by name field (partial match)
        in: query
        name: name
        type: string
      - description: Filter by time field (partial match)
        in: query
        name: content_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductionTime'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all productionTime
      tags:
      - ProductionTime
    post:
      consumes:
      - application/json
      parameters:
      - description: Production Time data
        in: body
        name: productionTime
        required: true
        schema:
          $ref: '#/definitions/models.ProductionTime'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductionTime'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new productionTime
      tags:
      - ProductionTime
  /production-times/{id}:
    delete:
      description: Delete a single production Time by its ID
      parameters:
      - description: Production Time ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Production Time deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a product ionTime by ID
      tags:
      - ProductionTime
    get:
      description: Get a single Production Time by its ID
      parameters:
      - description: Production Time ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductionTime'
        "400":
          description: Invalid ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Production Time not found
          schema:
            additionalProperties: true
            type: object
      summary: Get Production Time by ID
      tags:
      - ProductionTime
    put:
      consumes:
      - application/json
      description: Update the details of an existing production Time by providing
        the updated JSON payload
      parameters:
      - description: Production Time ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.ProductionTime'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductionTime'
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing production Time
      tags:
      - ProductionTime
  /products/:
    get:
      description: |-
        Retrieve a list of all products.
        - Use the 'search' parameter for a full-text search across all searchable fields.
        - Use the 'code', 'id', 'name', or 'type' parameters for individual field searches (partial matches).
        - Combine 'code', 'id', 'name', and 'type' parameters for cross-field AND search.
        Example: /products?search=keyword&code=abc&name=test
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Full-text search across all searchable fields
        in: query
        name: search
        type: string
      - description: Filter by code field (partial match)
        in: query
        name: code
        type: string
      - description: Filter by ID field (partial match)
        in: query
        name: id
        type: string
      - description: Filter by name field (partial match)
        in: query
        name: name
        type: string
      - description: Filter by type field (partial match)
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Create a product with the provided JSON payload
      parameters:
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new product
      tags:
      - Products
  /products/{id}:
    delete:
      description: Delete a single product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Product deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a product by ID
      tags:
      - Products
    get:
      description: Get a single product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get product by ID
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update the details of an existing product by providing the updated
        JSON payload
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing product
      tags:
      - Products
  /selection-rules/:
    get:
      description: |-
        Retrieve a list of all selection rules.
        - Use the 'search' parameter for a full-text search across all searchable fields.
        - Use 'code' or 'id', or 'name' parameters for individual field searches (partial matches).
        - Combine 'code', 'id', and 'name' parameters for cross-field AND search.
        Example: /selection-rules?search=keyword&code=abc&name=test
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Full-text search across all searchable fields
        in: query
        name: search
        type: string
      - description: Filter by code field (partial match)
        in: query
        name: code
        type: string
      - description: Filter by ID field (partial match)
        in: query
        name: id
        type: string
      - description: Filter by name field (partial match)
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SelectionRule'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all selection rules
      tags:
      - SelectionRules
    post:
      consumes:
      - application/json
      description: Create a selection rule with the provided JSON payload
      parameters:
      - description: Selection Rule data
        in: body
        name: SelectionRule
        required: true
        schema:
          $ref: '#/definitions/models.SelectionRule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SelectionRule'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new selection rule
      tags:
      - SelectionRules
  /selection-rules/{id}:
    delete:
      description: Delete a single selection rule by its ID
      parameters:
      - description: Selection Rule ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: SelectionRule deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a selection rule by ID
      tags:
      - SelectionRules
    get:
      description: Get a single Selection Rule by its ID
      parameters:
      - description: Selection Rule ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SelectionRule'
        "400":
          description: Entity 'Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get SelectionRule by ID
      tags:
      - SelectionRules
    put:
      consumes:
      - application/json
      description: Update the details of an existing selection rule by providing the
        updated JSON payload
      parameters:
      - description: Selection Rule ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Selection Rule data
        in: body
        name: SelectionRule
        required: true
        schema:
          $ref: '#/definitions/models.SelectionRule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SelectionRule'
        "400":
          description: Entity 'Validation error on field '%Given ID'
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity '%Entity Type' with ID '%Given ID' not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing selection rule
      tags:
      - SelectionRules
swagger: "2.0"
